@page "/"
@using WhyNotLang.Interpreter
@using WhyNotLang.Interpreter.Evaluators.ExpressionValues;
@inject IExecutor Executor

<h1>Hello, world!</h1>


<textarea id="main_text" @bind="@programCode" readonly="@isRunning" class="form-control" rows="10">
</textarea>
<p>
    <button class="btn btn-primary" @onclick="Toggle">Toggle variable</button>
    <button class="btn btn-primary" @onclick="Execute">Execute</button>
</p>

@code {
    bool toggle = false;
    bool isRunning { get; set; } = false;
    public string programCode { get; set; } = 
@"var x:= 0
while (x < 10)
begin
    Writeln(""Toggle value: "" + ToString(toggle))
    Delay(1)
    x := x+1
end
";

    void Toggle()
    {
        toggle = !toggle;
        Executor.ProgramState.AssignVariable("toggle", new ExpressionValue(IntToBool(toggle), ExpressionValueTypes.Number));
    }

    async Task Execute()
    {
        Executor.ProgramState.Clear();
        isRunning = true;
        Executor.Initialise(programCode);
        Executor.ProgramState.DeclareVariable("toggle", new ExpressionValue(IntToBool(toggle), ExpressionValueTypes.Number), true);
        await Executor.ExecuteAll();

        isRunning = false;
    }

    private int IntToBool(bool val)
    {
        return val ? 1 : 0;
    }
}